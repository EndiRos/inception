services:
  mariadb:
    build:
      context: ./services/mariadb
      dockerfile: Dockerfile
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
    secrets:
      - db_root_password
      - db_password
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped

  wordpress:
    build:
      context: ./services/wordpress
      dockerfile: Dockerfile
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - DOMAIN_NAME=${DOMAIN_NAME} 
    secrets:
      - db_password
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    depends_on:
      - wordpress
    volumes:
      - wordpress_data:/var/www/html
    ports:
      - "443:443"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device:  ${VOLUMES_PATH}/mariadb
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device:  ${VOLUMES_PATH}/wordpress
      o: bind
secrets:
  db_root_password:
    file: ./.secrets/db_root_password
  db_password:
    file: ./.secrets/db_password